<?xml version="1.0"?>
<sdf version="1.4">
  <model name="beary_x">
    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>

    <link name="base_footprint"/>

<!-- start beary_x_structure -->
    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0 0 -0.220 0 0 0</pose>
    </joint>

    <link name="base_link">
      <inertial>
        <pose>0 0.000593325287443985 -0.220 0 0 0</pose>
        <inertia>
          <ixx>7.2397393e-01</ixx>
          <ixy>4.686399e-10</ixy>
          <ixz>-1.09525703e-08</ixz>
          <iyy>7.2397393e-01</iyy>
          <iyz>2.8582649e-09</iyz>
          <izz>6.53050163e-01</izz>
        </inertia>
        <mass>8.2573504e-01</mass>
      </inertial>

      <collision name="base_collision">
        <!-- <pose>0 0.000593325287443985 0 0 0 0</pose> -->
        <pose>0 0.000593325287443985 -0.220 0 0 0</pose>
        <geometry>
          <box>
            <size>0.705 0.576 0.05</size>
          </box>
        </geometry>
      </collision>

      <visual name="base_visual">
        <pose>0 0.000593325287443985 -0.220 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://beary_x/meshes/base_link.dae</uri>
          </mesh>
        </geometry>
        <material> 
          <ambient>0.1 0.1 0.1 1</ambient>
        </material>
      </visual>
    </link>
<!-- end beary_x_structure -->


<!-- start wheel_1 -->
    <joint name="wheel_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <pose>0 0.19775 -0.1460 -1.5708 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <link name="wheel_left_link">
      <inertial>
        <pose>0 0.19775 -0.1460 -1.5708 0 0</pose>
        <inertia>
          <ixx>1.8158194e-03</ixx>
          <ixy>-9.3392e-12</ixy>
          <ixz>1.04909e-11</ixz>
          <iyy>3.2922126e-03</iyy>
          <iyz>5.75694e-11</iyz>
          <izz>1.8158194e-03</izz>
        </inertia>
        <mass>2.8498940e-02</mass>
      </inertial>

      <collision name="wheel_1_collision">
        <pose>0 0.19775 -0.1460 -1.5708 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.10</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name="wheel_1_visual">
        <pose>0 0.19775 -0.1460 -1.5708 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://beary_x/meshes/wheel_left_link.dae</uri>
          </mesh>
        </geometry>
        <material> 
          <ambient>0.1 0.1 0.1 1</ambient>
        </material>
      </visual>
    </link>
<!-- end wheel_1 -->

<!-- start wheel_2 -->
    <joint name="wheel_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <pose>0 -0.19775 -0.1460 -1.5708 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <link name="wheel_right_link">
      <inertial>
        <pose>0 -0.19775 -0.1460 -1.5708 0 0</pose>
        <inertia>
          <ixx>1.8158194e-03</ixx>
          <ixy>-9.3392e-12</ixy>
          <ixz>1.04909e-11</ixz>
          <iyy>3.2922126e-03</iyy>
          <iyz>5.75694e-11</iyz>
          <izz>1.8158194e-03</izz>
        </inertia>
        <mass>2.8498940e-02</mass>
      </inertial>

      <collision name="wheel_2_collision">
        <pose>0 -0.19775 -0.1460 -1.5708 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.10</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name="wheel_2_visual">
        <pose>0 -0.19775 -0.1460 -1.5708 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://beary_x/meshes/wheel_right_link.dae</uri>
          </mesh>
        </geometry>
        <material> 
          <ambient>0.1 0.1 0.1 1</ambient>
        </material>
      </visual>
    </link>
<!-- end wheel_2 -->

<!-- start imu -->
    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose>-0.20 0 -0.150 0 0 -1.5708</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <link name="imu_link">
      <sensor name="imu" type="imu">
        <always_on>true</always_on>
        <update_rate>200</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="bearyx_imu" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>
<!-- end imu -->

<!-- start scan 1-->
    <joint name="lidar_joint_1" type="fixed">
      <parent>base_link</parent>
      <child>base_scan_1</child>
      <pose>0.3 0.235 -0.09797 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name="base_scan_1">
      <inertial>
        <pose>0.3 0.235 -0.09797 0 0 0</pose>
        <inertia>
          <ixx>3.08343933333962E-08</ixx>
          <ixy>-2.78438473410044E-09</ixy>
          <ixz>-7.56893245046912E-10</ixz>
          <iyy>3.08304806407341E-08</iyy>
          <iyz>-7.57864800840152E-10</iyz>
          <izz>4.50852856571892E-08</izz>
        </inertia>
        <mass>3.74307663679103E-05</mass>
      </inertial>

      <collision name="lidar_sensor_collision_1">
        <pose>0.3 0.235 -0.097970 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.0375</radius>
            <length>0.040</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="lidar_sensor_visual_1">
        <pose>0.3 0.235 -0.09797 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://beary_x/meshes/scan_1.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <sensor name="hls_lfcd_lds_1" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>0.3 0.235 -0.09 0 0 0</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>-1.57</min_angle>
              <max_angle>3.14</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="bearyx_laserscan_1" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=scan_1</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan_1</frame_name>
        </plugin>
      </sensor>
    </link>
<!-- end scan 1-->

<!-- start scan 2-->
    <joint name="lidar_joint_2" type="fixed">
      <parent>base_link</parent>
      <child>base_scan_2</child>
      <pose>-0.3 -0.235 -0.09797 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name="base_scan_2">
      <inertial>
        <pose>-0.3 -0.235 -0.09797 0 0 0</pose>
        <inertia>
          <ixx>3.08343933332249E-08</ixx>
          <ixy>-2.7843847341003E-09</ixy>
          <ixz>7.56893245050378E-10</ixz>
          <iyy>3.08304806405632E-08</iyy>
          <iyz>7.57864800841837E-10</iyz>
          <izz>4.508528565719E-08</izz>
        </inertia>
        <mass>3.74307663679113E-05</mass>
      </inertial>

      <collision name="lidar_sensor_collision_2">
        <geometry>
          <cylinder>
            <radius>0.0375</radius>
            <length>0.040</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="lidar_sensor_visual_2">
        <pose>-0.3 -0.235 -0.09797 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://beary_x/meshes/scan_2.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <sensor name="hls_lfcd_lds_2" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>-0.3 -0.235 -0.09 0 0 0</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>1.57</min_angle>
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="bearyx_laserscan_2" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_2</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan_2</frame_name>
        </plugin>
      </sensor>
    </link>
<!-- end scan 2-->

<!-- start camera -->
    <joint name="camera_joint" type="fixed">
      <parent>base_link</parent>
      <child>camera_link</child>
      <pose>0.355 0 -0.0247 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>  

    <link name="camera_link">
      <inertial>
        <pose>0.355 0 -0.0247 0 0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>1.4479147974995E-06</mass>
      </inertial>

      <visual name="camera_visual">
        <pose>0.355 0 -0.0247 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://beary_x/meshes/camera3d_link.dae</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0.4 0.4 0.4 1</ambient>  
        </material>
      </visual>

      <sensor name="camera" type="camera">
        <pose>0.355 0 -0.0247 0 0 0</pose>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>30</update_rate>
        <camera name="picam">
          <horizontal_fov>1.2391837689</horizontal_fov>
          <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
            <ros>
              <!-- <namespace>test_cam</namespace> -->
              <!-- <remapping>image_raw:=image_demo</remapping> -->
              <!-- <remapping>camera_info:=camera_info_demo</remapping> -->
            </ros>
            <!-- camera_name>omit so it defaults to sensor name</camera_name-->
            <!-- frame_name>omit so it defaults to link name</frameName-->
            <!-- <hack_baseline>0.07</hack_baseline> -->
          </plugin>
      </sensor>
    </link>      
<!-- end camera -->

    <plugin name="bearyx_controller" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <!-- <namespace>/tb3</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.19975</wheel_separation>
      <wheel_diameter>0.200</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>

    <plugin name="bearyx_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin> 

  </model>
</sdf>

